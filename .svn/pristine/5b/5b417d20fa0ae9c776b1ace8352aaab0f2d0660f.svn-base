<template>
  <div>
    <!--    面包屑导航区-->
    <el-breadcrumb separator-class="el-icon-arrow-right">
      <el-breadcrumb-item :to="{ path: '/merchanthome' }">首页</el-breadcrumb-item>
      <el-breadcrumb-item>订单管理</el-breadcrumb-item>
      <el-breadcrumb-item>订单列表</el-breadcrumb-item>
    </el-breadcrumb>

    <!--    卡片视图区-->
    <el-card>
      <el-row :gutter="30">
        <el-col :span="8">
          <el-input placeholder="请输入内容(未发货/已发货)" v-model="queryInfo.query" clearable @clear="getOrderList">
            <el-button slot="append" icon="el-icon-search" @click="getOrderList"></el-button>
          </el-input>
        </el-col>
      </el-row>
      <!--      table表格区-->
      <el-table :data="orderslist" border stripe>
        <el-table-column type="index"></el-table-column>
        <el-table-column label="订单编号" prop="orderId"></el-table-column>
        <el-table-column label="订单数量" prop="orderNumber"></el-table-column>
        <el-table-column label="是否发货" prop="orderState">
          <template slot-scope="scope">
            {{ is_send[scope.row.orderState] }}
          </template>
        </el-table-column>
        <el-table-column label="下单时间" prop="orderDate" width="160px">
          <template slot-scope="scope">
            {{ scope.row.orderDate | dateFormat }}
          </template>
        </el-table-column>
        <el-table-column label="操作" width="130px">
          <template slot-scope="scope">
            <el-button type="primary" size="mini" icon="el-icon-view" @click="showOrderDialog(scope.row.orderId)"></el-button>
            <el-button type="success" size="mini" icon="el-icon-location" @click="showLocationDialog(scope.row.orderId)"></el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--      分页-->
      <el-pagination
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="queryInfo.pageNo"
        :page-sizes="[5, 10, 15, 20]"
        :page-size="queryInfo.pageSize"
        layout="total, sizes, prev, pager, next, jumper"
        :total="totalElement"
        background >
      </el-pagination>
    </el-card>

    <!--    显示订单详情对话框-->
    <el-dialog
      title="订单详情"
      :visible.sync="orderInfoDialogVisible"
      width="50%">
      <el-form label-width="100px">
        <el-form-item :model="orderInfoForm" label="订单编号：" prop="orderId">
          <el-input v-model="orderInfoForm.orderId" disabled></el-input>
        </el-form-item>
        <el-form-item :model="orderInfoForm" label="商品名称：" prop="spuName">
          <el-input v-model="orderInfoForm.spuName" disabled></el-input>
        </el-form-item>
        <el-form-item :model="orderInfoForm" label="商品数量：" prop="goodNumber">
          <el-input v-model="orderInfoForm.goodNumber" disabled></el-input>
        </el-form-item>
        <el-form-item label="下单时间：">
          <el-input v-model="orderAddDate" disabled></el-input>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" @click="orderInfoDialogVisible = false">确 定</el-button>
      </span>
    </el-dialog>
    <!--    显示收货地址详情对话框-->
    <el-dialog
      title="收货地址详情"
      :visible.sync="addressInfoDialogVisible"
      width="50%">
      <span>这是一段信息</span>
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" @click="addressInfoDialogVisible = false">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
export default {
  data () {
    return {
      // 查询参数对象
      queryInfo: {
        query: '',
        pageNo: 1,
        pageSize: 10
      },
      orderslist: [],
      totalElement: 0,
      totalPage: 0,
      is_send: ['未发货', '已发货'],
      // 对话框
      orderInfoDialogVisible: false,
      addressInfoDialogVisible: false,
      // 下单时间
      orderAddDate: '',
      // 订单详情表单
      orderInfoForm: {},
      // 地址详情表单
      addressInfoForm: {}
    }
  },
  created () {
    this.getOrderList()
  },
  methods: {
    // 时间修改
    dateForm (originVal) {
      const dt = new Date(originVal)
      const y = dt.getFullYear()
      const m = (dt.getMonth() + 1 + '').padStart(2, '0')
      const d = (dt.getDate() + '').padStart(2, '0')

      const hh = (dt.getHours() + '').padStart(2, '0')
      const mm = (dt.getMinutes() + '').padStart(2, '0')
      const ss = (dt.getSeconds() + '').padStart(2, '0')

      return `${y}-${m}-${d} ${hh}:${mm}:${ss}`
    },
    getOrderList () {
      this.$axios({
        method: 'get',
        url: 'myshopping/seller/getAllOrders',
        params: this.queryInfo
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('获取订单列表失败！')
        }
        this.$message.success('获取订单列表成功! ')
        // console.log(response.data)
        this.orderslist = response.data.content
        this.totalElement = response.data.totalElement
        this.totalPage = response.data.totalPage
      })
    },
    // 显示订单详情
    showOrderDialog (id) {
      this.$axios({
        method: 'get',
        url: 'myshopping/seller/getOrderInfoByOrderId',
        params: { orderId: id }
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('查询订单详情失败！')
        }
        this.$message.success('查询订单详情成功! ')
        // console.log(response.data)
        this.orderInfoForm = response.data.data
        this.orderAddDate = this.dateForm(response.data.data.orderDate)
      })
      this.orderInfoDialogVisible = true
    },
    // 显示地址详情
    showLocationDialog (id) {
      this.$axios({
        method: 'get',
        url: 'myshopping/seller/getAddressByOrderId',
        params: { orderId: id }
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('查询订单地址详情失败！')
        }
        this.$message.success('查询订单地址详情成功! ')
        // console.log(response.data)
        this.addressInfoForm = response.data.data
      })
      this.addressInfoDialogVisible = true
    },
    // 分页
    handleSizeChange (newSize) {
      this.queryInfo.pageSize = newSize
      this.getOrderList()
    },
    handleCurrentChange (newPage) {
      this.queryInfo.pageNo = newPage
      this.getOrderList()
    }
  }
}
</script>

<style scoped>
  .el-card {
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15) !important;
    margin-top: 15px;
  }

  .el-table {
    margin-top: 15px;
    font-size: 12px;
  }

  .el-pagination {
    margin-top: 15px;
  }
</style>
