package com.hitwh.shop.controller;

import com.fasterxml.jackson.databind.ser.Serializers;
import com.hitwh.shop.model.entity.Collection;
import com.hitwh.shop.model.pojo.BaseResult;
import com.hitwh.shop.service.BuyerService;
import com.hitwh.shop.util.ConstUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpSession;

/**
 * @ClassName BuyerController
 * @Description 买家的功能接口
 * @Author 孙一恒
 * @Date 2020/6/1 17:12
 * @Version 1.0
 **/
@RestController
@RequestMapping(ConstUtils.URL_BUYER)
public class BuyerController {
    @Autowired
    private BuyerService buyerService;

    //获取收藏夹的内容
    @RequestMapping(value = ConstUtils.URL_GET_COLLECTION, method = RequestMethod.GET)
    public BaseResult<Object> getCollection(@RequestParam("userId") Integer userId, HttpSession session){
        BaseResult <Object> result= new BaseResult<>();
        buyerService.getCollection(result, userId, session);
        return result;
    }

    //添加收藏（该接口最终可能不在这个页面）
    @RequestMapping(value = ConstUtils.URL_ADD_COLLECTION, method = RequestMethod.POST)
    public BaseResult<Object> addCollection(@RequestParam("userId") Integer userId, @RequestParam("spuId") Integer spuId,HttpSession session){
        BaseResult <Object> result= new BaseResult<>();
        buyerService.addCollection(result, userId, spuId, session);
        return result;
    }

    //删除收藏
    @RequestMapping(value = ConstUtils.URL_DELETE_COLLECTION, method = RequestMethod.POST)
    public BaseResult<Object> deleteCollection(@RequestParam("userId") Integer userId, @RequestParam("spuId") Integer spuId,HttpSession session){
        BaseResult <Object> result= new BaseResult<>();
        buyerService.deleteCollection(result, userId, spuId, session);
        return result;
    }
}
