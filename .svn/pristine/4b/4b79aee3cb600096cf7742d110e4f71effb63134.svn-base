<template>
  <div>
    <!--    面包屑导航区-->
    <el-breadcrumb separator-class="el-icon-arrow-right">
      <el-breadcrumb-item :to="{ path: '/merchanthome' }">首页</el-breadcrumb-item>
      <el-breadcrumb-item>订单管理</el-breadcrumb-item>
      <el-breadcrumb-item>待发货列表</el-breadcrumb-item>
    </el-breadcrumb>

    <!--    卡片视图区-->
    <el-card>
      <!--      table表格区-->
      <el-table :data="orderslist" border stripe>
        <el-table-column type="index"></el-table-column>
        <el-table-column label="订单编号" prop="orderId"></el-table-column>
        <el-table-column label="订单数量" prop="orderNumber"></el-table-column>
        <el-table-column label="发货状态" prop="orderState">
          <template slot-scope="scope">
            {{ is_send[scope.row.orderState] }}
          </template>
        </el-table-column>
        <el-table-column label="下单时间" prop="orderDate" width="160px">
          <template slot-scope="scope">
            {{ scope.row.orderDate | dateFormat }}
          </template>
        </el-table-column>
        <el-table-column label="操作" width="130px">
          <template slot-scope="scope">
            <el-button type="primary" size="mini" icon="el-icon-edit" @click="editAddressDialog()"></el-button>
            <el-button type="success" size="mini" icon="el-icon-check" @click="showSendInfo(scope.row.id)"></el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--      分页-->
      <el-pagination
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="queryInfo.pageNo"
        :page-sizes="[5, 10, 15, 20]"
        :page-size="queryInfo.pageSize"
        layout="total, sizes, prev, pager, next, jumper"
        :total="totalElement"
        background >
      </el-pagination>
    </el-card>
    <!--    修改地址对话框-->
    <el-dialog
      title="修改收货地址"
      :visible.sync="editAddressInfoDialogVisible"
      width="50%">
      <el-form :model="addressForm" :rules="addressFormRules" ref="addressFormRef" label-width="100px">
        <el-form-item label="省市区/县" prop="addres1">
          <el-cascader expand-trigger="hover" :options="cityData" v-model="addressForm.address1"></el-cascader>
        </el-form-item>
        <el-form-item label="详细地址" prop="addres2">
          <el-input v-model="addressForm.address2"></el-input>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="editAddressInfoDialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="editAddressInfoDialogVisible = false">确 定</el-button>
      </span>
    </el-dialog>

    <!--    发送校验对话框-->
    <el-dialog
      title="校验发货信息"
      :visible.sync="checkSendInfoDialogVisible"
      width="50%">
      <span>这是一段信息</span>
      <span slot="footer" class="dialog-footer">
        <el-button @click="checkSendInfoDialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="checkSendInfoDialogVisible = false">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
import cityData from './citydata.js'

export default {
  data () {
    return {
      // 查询参数对象
      queryInfo: {
        query: '未发货',
        pageNo: 1,
        pageSize: 10
      },
      orderslist: [],
      totalElement: 0,
      totalPage: 0,
      is_send: ['未发货', '已发货'],
      // 对话框
      editAddressInfoDialogVisible: false,
      checkSendInfoDialogVisible: false,
      addressForm: {
        address1: [],
        address2: ''
      },
      addressFormRules: {
        address1: [
          { required: true, message: '请选择省市区/县', trigger: 'blur' }
        ],
        address2: [
          { required: true, message: '请填写详细地址', trigger: 'blur' }
        ]
      },
      cityData
    }
  },
  created () {
    this.getOrderList()
  },
  methods: {
    getOrderList () {
      this.$axios({
        method: 'get',
        url: 'myshopping/seller/getAllOrders',
        params: this.queryInfo
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('获取订单列表失败！')
        }
        this.$message.success('获取订单列表成功! ')
        // console.log(response.data)
        this.orderslist = response.data.content
        this.totalElement = response.data.totalElement
        this.totalPage = response.data.totalPage
      })
    },
    // 显示订单详情
    editAddressDialog () {
      this.editAddressInfoDialogVisible = true
    },
    // 显示地址详情
    showSendInfo (id) {
      this.checkSendInfoDialogVisible = true
    },
    // 分页
    handleSizeChange (newSize) {
      this.queryInfo.pageSize = newSize
      this.getOrderList()
    },
    handleCurrentChange (newPage) {
      this.queryInfo.pageNo = newPage
      this.getOrderList()
    }
  }
}
</script>

<style scoped>
  .el-card {
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15) !important;
    margin-top: 15px;
  }

  .el-table {
    margin-top: 15px;
    font-size: 12px;
  }

  .el-pagination {
    margin-top: 15px;
  }

  .el-cascader {
    width: 100%;
  }
</style>
