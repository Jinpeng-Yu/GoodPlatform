package com.hitwh.shop.service.impl;

import com.hitwh.shop.dao.SKURepository;
import com.hitwh.shop.dao.SPURepository;
import com.hitwh.shop.dao.SpuTypeRepository;
import com.hitwh.shop.dao.UserRepository;
import com.hitwh.shop.model.entity.Sku;
import com.hitwh.shop.model.entity.Spu;
import com.hitwh.shop.model.entity.SpuType;
import com.hitwh.shop.model.pojo.BasePageResult;
import com.hitwh.shop.model.pojo.BaseResult;
import com.hitwh.shop.model.pojo.SpuSalesResult;
import com.hitwh.shop.service.SellerService;
import com.hitwh.shop.util.ConstUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.servlet.http.HttpSession;
import javax.transaction.Transactional;
import java.util.ArrayList;
import java.util.List;

/**
 * @ClassName SellerServiceImpl
 * @Description TODO
 * @Author 于劲鹏
 * @Date 2020/6/1 17:23
 * @Version 1.0
 **/
@Service
public class SellerServiceImpl implements SellerService {
    @Autowired
    private UserRepository userRepository;

    @Autowired
    private SPURepository spuRepository;

    @Autowired
    private SKURepository skuRepository;

    @Autowired
    private SpuTypeRepository spuTypeRepository;

    @Override
    public void getCommodityItemList(BaseResult<Object> result) {
        List<String> commodityItemList = new ArrayList<String>();
        commodityItemList.add("商品列表");
        commodityItemList.add("添加商品");
        result.construct(true, ConstUtils.MSG_QUERY_SUCCESS, commodityItemList);
    }

    @Override
    public void getOrderItemList(BaseResult<Object> result) {
        List<String> orderItemList = new ArrayList<String>();
        orderItemList.add("订单列表");
        orderItemList.add("退货申请处理");
        result.construct(true, ConstUtils.MSG_QUERY_SUCCESS, orderItemList);
    }

    @Override
    public void getStoreSPUSales(HttpSession session, BaseResult<List<SpuSalesResult>> result) {
        Integer userId = (Integer)session.getAttribute(ConstUtils.SESSION_USER_ID);
        List<SpuSalesResult> data = userRepository.getSpuSalesByUserId(userId);
        result.construct(true, ConstUtils.MSG_SUCCESS, data);
    }

    @Override
    public void getAllSpus(HttpSession session, String query, BasePageResult<Object> result, Pageable pageable) {
        Integer userId = (Integer)session.getAttribute(ConstUtils.SESSION_USER_ID);
        if (query == null || query.length() <= 0) {
            Page<Spu> spus = spuRepository.findSpusByUserId(pageable, userId);
            result.construct(true, ConstUtils.MSG_SUCCESS, null, spus);
        } else {
            Page<Spu> spus = spuRepository.findSpusByNameByUserId(pageable, query, userId);
            result.construct(true, ConstUtils.MSG_SUCCESS, null, spus);
        }
    }

    @Transactional
    @Override
    public void deleteSpuById(HttpSession session, Integer spuId, BaseResult<Object> result) {
        // Integer userId = (Integer)session.getAttribute(ConstUtils.SESSION_USER_ID);
        List<Sku> skuList = skuRepository.findSkusBySpuId(spuId);
        spuRepository.deleteSpuById(spuId);
        for( Sku s : skuList ) {
            skuRepository.deleteSkuById(s.getId());
        }
        result.construct(true, ConstUtils.MSG_SUCCESS, null);
    }

    @Override
    public void getCategories(BaseResult<Object> result) {
        List<SpuType> spuTypeList = spuTypeRepository.findSpuTypesByDeleted(0);
        result.construct(true, ConstUtils.MSG_SUCCESS, spuTypeList);
    }
}
