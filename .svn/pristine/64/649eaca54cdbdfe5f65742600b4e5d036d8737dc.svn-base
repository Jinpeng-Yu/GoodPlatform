<template>
  <div>
    <el-row>
      <el-col :span="22" offset="1"><div class="grid-content bg-purple-dark">个人信息</div><el-divider></el-divider></el-col>
    </el-row>
    <el-row gutter="20">
      <el-col :span="14" style="margin-left: 30px">
        <el-card class="box-card">
          <div slot="header">
            <span>用户信息</span>
          </div>
          <div>
            <template><div><el-form label-width="80px" class="info_form">
              <el-form-item style="margin-left: 220px">
                <el-upload
                  class="avatar-uploader"
                  action="http://101.201.197.212:8989/image/picUpload"
                  :on-success="handleAvatarSuccess"
                  :before-upload="beforeAvatarUpload">
                  <img v-if="imageUrl" :src="'http://' + imageUrl" class="avatar">
                  <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                </el-upload>
              </el-form-item>
              <el-form-item label="用户名称">
                <el-input v-model="userName" id="username" disabled="true"></el-input>
              </el-form-item>
              <el-form-item label="用户邮箱">
                <el-input v-model="email" id="email" disabled="true"></el-input>
              </el-form-item>
              <el-form-item label="地址信息">
                <el-select placeholder="请选择" v-model="provinceOptions.value" style="width: 180px" id="province" v-bind:disabled="disabledFlag" @change="getCity">
                  <el-option
                    v-for="item in provinceOptions"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value"></el-option>
                </el-select>
                <el-select placeholder="请选择" v-model="cityOptions.value" tyle="width: 180px;margin-left: 20px" id="city" v-bind:disabled="disabledFlag" @change="getCounty">
                  <el-option
                    v-for="item in cityOptions"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value"></el-option>
                </el-select>
                <el-select placeholder="请选择" v-model="countyOptions.value" style="width: 180px;margin-left: 20px"  id="county" v-bind:disabled="disabledFlag" @change="setCounty">
                  <el-option
                    v-for="item in countyOptions"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value"></el-option>
                </el-select>
              </el-form-item>
              <el-form-item label="具体地址">
                <el-input id="detail" v-bind:disabled="disabledFlag" v-model="details"></el-input>
              </el-form-item>
              <el-form-item label="联系方式">
                <el-input id="phone" v-bind:disabled="disabledFlag" v-model="phone"></el-input>
              </el-form-item>
              <el-form-item class="btns">
                <el-button type="primary" @click="edit">编辑</el-button>
                <el-button type="primary" @click="save">保存</el-button>
              </el-form-item>
            </el-form>
            </div></template>
          </div>
        </el-card>
      </el-col>
      <el-col :span="8">
        <el-card class="box-card">
          <div slot="header">
            <span>商铺信息</span>
          </div>
          <div>
            <template><div style="text-align: center;margin-top: 30px">我的店铺</div>
              <div><el-form label-width="80px" class="store_form">
                <el-form-item label="商铺名称" style="margin-top: 30px">
                  <el-input></el-input>
                </el-form-item>
                <el-form-item class="btns" style="margin-top: 30px">
                  <el-button type="primary">编辑</el-button>
                  <el-button type="primary" @click="button2">保存</el-button>
                </el-form-item>
              </el-form></div></template>
          </div>
        </el-card>
      </el-col>
    </el-row>
  </div>
</template>

<script>
export default {
  data () {
    return {
      imageUrl: '',
      userName: '',
      email: '',
      province: '',
      city: '',
      county: '',
      details: '',
      phone: '',
      disabledFlag: 'true',
      provinceOptions: [],
      cityOptions: [],
      countyOptions: []
    }
  },
  created () {
    this.getInfo()
    this.getProvince()
  },
  methods: {
    handleAvatarSuccess (res, file) {
      this.imageUrl = res.data
    },
    beforeAvatarUpload (file) {
      const isJPG = file.type === 'image/jpeg'
      const isLt2M = file.size / 1024 / 1024 < 2

      if (!isJPG) {
        this.$message.error('上传头像图片只能是 JPG 格式!')
      }
      if (!isLt2M) {
        this.$message.error('上传头像图片大小不能超过 2MB!')
      }
      return isJPG && isLt2M
    },
    getInfo () {
      this.$axios({
        methods: 'get',
        url: 'myshopping/buyer/getUserInfoById'
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('登录失败！')
        } else {
          console.log(response.data.success)
          if (response.data.success === true) {
            console.log(response.data.data)
            this.userName = response.data.data.username
            this.email = response.data.data.email
            this.province = response.data.data.provinceName
            this.city = response.data.data.cityName
            this.county = response.data.data.countryName
            this.details = response.data.data.detail
            this.phone = response.data.data.phone
            document.getElementById('username').value = this.userName
            document.getElementById('email').value = this.email
            document.getElementById('province').value = this.province
            document.getElementById('city').value = this.city
            document.getElementById('county').value = this.county
            document.getElementById('detail').value = this.details
            document.getElementById('phone').value = this.phone
          }
        }
      })
    },
    button2 () {
      this.routerIndex()
    },
    routerIndex () {
      this.$router.push({
        path: '/merchanthome'
      })
    },
    edit () {
      this.disabledFlag = false
    },
    getProvince () {
      this.$axios({
        methods: 'get',
        url: 'myshopping/buyer/getProvince'
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('登录失败！')
        } else {
          console.log(response.data.success)
          if (response.data.success === true) {
            const provinceData = response.data.data
            for (let i = 0; i < provinceData.length; i++) {
              this.provinceOptions.push({
                value: provinceData[i].id,
                label: provinceData[i].name
              })
            }
          }
        }
      })
    },
    getCity (val) {
      if (val) {
        let obj = {}
        obj = this.provinceOptions.find(item => {
          return item.value === val
        })
        this.province = obj.label
        console.log(obj.label)
        this.$axios({
          methods: 'get',
          url: 'myshopping/buyer/getCity',
          params: { name: this.province }
        }).then(response => {
          if (response.status !== 200) {
            return this.$message.error('登录失败！')
          } else {
            console.log(response.data.success)
            console.log(response.data.data)
            if (response.data.success === true) {
              const cityData = response.data.data
              for (let i = 0; i < cityData.length; i++) {
                this.cityOptions.push({
                  value: cityData[i].id,
                  label: cityData[i].name
                })
              }
            }
          }
        })
      } else {
      }
    },
    getCounty (val) {
      if (val) {
        let obj = {}
        obj = this.cityOptions.find(item => {
          return item.value === val
        })
        this.city = obj.label
        console.log(obj.label)
        this.$axios({
          methods: 'get',
          url: 'myshopping/buyer/getCounty',
          params: { name: this.city }
        }).then(response => {
          if (response.status !== 200) {
            return this.$message.error('登录失败！')
          } else {
            console.log(response.data.success)
            console.log(response.data.data)
            if (response.data.success === true) {
              const countyData = response.data.data
              for (let i = 0; i < countyData.length; i++) {
                this.countyOptions.push({
                  value: countyData[i].id,
                  label: countyData[i].name
                })
              }
            }
          }
        })
      }
    },
    setCounty (val) {
      if (val) {
        let obj = {}
        obj = this.countyOptions.find(item => {
          return item.value === val
        })
        this.county = obj.label
        console.log(obj.label)
      }
    },
    save () {
      this.$axios({
        methods: 'get',
        url: 'myshopping/public/login',
        params: this.loginForm
      }).then(response => {
        if (response.status !== 200) {
          return this.$message.error('登录失败！')
        } else {
          console.log(response.data.success)
          if (response.data.success === true) {
            window.sessionStorage.setItem('userId', response.data.data.id)
            // console.log(response.data.data.id)
            this.routerIndex()
          }
        }
      })
    }
  }
}
</script>

<style lang="less" scoped>
  .bg-purple-dark {
    background: #eaedf1;
  }
  .grid-content {
    border-radius: 4px;
    min-height: 36px;
    font-family: "Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "微软雅黑", Arial, sans-serif;
  }
  .avatar-uploader .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
  .avatar-uploader .el-upload:hover {
    border-color: #409EFF;
  }
  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 100px;
    height: 100px;
    line-height: 100px;
    text-align: center;
  }
  .avatar {
    width: 100px;
    height: 100px;
    display: block;
  }
  .btns{
    display: flex;
    justify-content: center;
  }
</style>
